from enum import Enum
from dataclasses import dataclass
import random
from functools import wraps, partial


class Size(Enum):
    """
    –û—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–∑–º–µ—Ä–∞, —á—Ç–æ–±—ã –Ω–µ –æ—à–∏–±–∏—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∏
    –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã
    """
    L = 'L'
    XL = 'XL'


def log(func=None, description=None):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ
    —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç beg –¥–æ end.
    –¢–∞–∫–∂–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —à–∞–±–ª–æ–Ω (description), –≤ –∫–æ—Ç–æ—Ä—ã–π
    –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º—è
    """
    description_list = []
    if func is None:
        return partial(log, description=description)

    @wraps(func)
    def wrapper(*args, **kwargs):
        beg = 2
        end = 10
        random_order_time = random.randint(beg, end)
        name = func.__name__
        if not description:
            print(f'{name} - {random_order_time}c!')
        else:
            print(description.format(f'{random_order_time}'))

    return wrapper


@dataclass
class Pizza:
    """
    –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–ª—è –ª—é–±–æ–π –Ω–æ–≤–æ–π –ø–∏—Ü—Ü—ã, –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–æ–º—É, —á—Ç–æ –µ—Å—Ç—å
    –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä @dataclass, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ __eq__ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    –¥–≤—É—Ö –ø–∏—Ü—Ü
    """
    size: Size
    ingredients: list[str]

    @classmethod
    def content(cls):
        """
        –ú–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É –≤ –º–µ–Ω—é –∫–∞—Ñ–µ –±—É–¥—É—Ç
        –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–µ –≤–∏–¥—ã –ø–∏—Ü—Ü –ø—Ä–∏ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏–∏
        """
        for subcls in cls.__subclasses__():
            a = subcls()
            print(f'- {subcls.__name__}{a.emoji}:', sep='', end=' ')
            print(*a.ingredients, sep=', ')

    @log(description='ü•ò –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {} c!')
    @classmethod
    def bake(cls):
        """–í—ã–ø–µ–∫–∞–µ–º –ø–∏—Ü—Ü—É"""

    @log(description='üõ∫ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {} c!')
    @classmethod
    def delivery(cls):
        """–î–æ—Å—Ç–∞–≤–∫–∞ –ø–∏—Ü—Ü—ã"""

    @log
    @classmethod
    def pickup(cls):
        """–°–∞–º–æ–≤—ã–≤–æ–∑ –ø–∏—Ü—Ü—ã"""

    def dict(self) -> None:
        """
        –í—ã–≤–æ–¥–∏—Ç –≤–µ—Å–µ–ª–µ–Ω—å–∫–∏–π —Ä–µ—Ü–µ–ø—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∏—Ü—Ü—ã
        """
        print('', self.__class__.__name__, self.emoji)
        print('', *self.ingredients, sep='\n-')


class Margherita(Pizza):

    def __init__(self, size=Size.L):
        self.emoji = ' üßÄ'
        self.ingredients = ['tomato sauce', 'mozzarella', 'tomatoes']
        super().__init__(size, self.ingredients)


class Pepperoni(Pizza):

    def __init__(self, size=Size.L):
        self.emoji = ' üçï'
        self.ingredients = ['tomato sauce', 'mozzarella', 'pepperoni']
        super().__init__(size, self.ingredients)


class Hawaiian(Pizza):

    def __init__(self, size=Size.L):
        self.emoji = ' üçç'
        self.ingredients = ['tomato sauce', 'mozzarella', 'chicken',
                            'pineapples']
        super().__init__(size, self.ingredients)


if __name__ == '__main__':
    b = Pepperoni(Size.XL)
    c = Hawaiian()
    print(b == c)
    Pizza.content()
    Pizza.bake()
    Pizza.delivery()
    Pizza.pickup()
    c.dict()
